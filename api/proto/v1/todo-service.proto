syntax = "proto3";

option go_package = "./v1";

import "google/protobuf/timestamp.proto";

// service for managing tasks
service ToDoService {
    rpc Create(CreateRequest) returns (CreateResponse);
    rpc Read(ReadRequest) returns (ReadResponse);
    rpc Update(UpdateRequest) returns (UpdateResponse);
    rpc Delete(DeleteRequest) returns (DeleteResponse);
    rpc ReadAll(ReadAllRequest) returns (ReadAllResponse);
}

// tasks we need to do
message ToDo {
    // unique identifier
    int64 id = 1;
    // title of the task
    string title = 2;
    // description of the task
    string description = 3;
    // date and time to complete the task
    google.protobuf.Timestamp deadline = 4;
}

// request data for creating a new task
message CreateRequest {
    // API version, a best-practice to specify version explicitly
    string api = 1;

    // task to create
    ToDo todo = 2;
}

// response data for creating a new task
message CreateResponse {
    // API version, a best-practice to specify version explicitly
    string api = 1;

    // id of the created task
    int64 id = 2;
}

// request data for reading an existing task
message ReadRequest {
    string api = 1;
    // id of the task to read
    int64 id = 2;
}

// response data for reading an existing task containing the task data specified by the id back in request
message ReadResponse {
    string api = 1;
    // task data read by the id
    ToDo todo = 2;
}

// request data for updating an existing task
message UpdateRequest {
    string api = 1;
    // task to update
    ToDo todo = 2;
}

// response data for updating an existing task containing the status of the update operation
message UpdateResponse {
    string api = 1;
    // status of the update operation
    bool updated = 2;
}

// request data for deleting an existing task
message DeleteRequest {
    string api = 1;
    // id of the task to delete
    int64 id = 2;
}

// response data for deleting an existing task containing the status of the delete operation
message DeleteResponse {
    string api = 1;
    // status of the delete operation
    bool deleted = 2;
}

// request data for listing all tasks
message ReadAllRequest {
    string api = 1;
}

// response data for listing all tasks containing the list of tasks
message ReadAllResponse {
    string api = 1;
    // list of tasks
    repeated ToDo todos = 2;
}